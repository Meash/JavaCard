<?xml version="1.0" encoding="UTF-8"?>
<!--
   Ant build file for the Java Card applet called "SecureRMIDemo"
   that builds, converts, verifies, and deploys the applet
   The target "build-applet" is used to compile the applet.
   The target "verify-applet" is used to convert and verify the applet.
   The target "deploy-applet" is used to convert and deploy the applet.
   The target "run-script" is used to run the applet with a script file after it is deployed.
   The target "start-cad" is used to start the CAD simulator after applet is deployed.
   The target "build-host" is used to compile the host.
   The target "run-host" is used to run the host after it is built and CAD simulator started.
   The target "clean" is used to delete class files in build and deploy folder.
-->

<!-- Note: FOLLOWING SPECIFIES THE PROJECT NAME FOR THE JAVA CARD APPLICATION -->
<project basedir="." default="help" name="SecureApplet">
	<property name="verbose" value="true"/>

	<property name="base.package" value="nz.ac.aut.hss.card"/>
	<property name="base.sourcedir" value="src"/>
	<property name="base.lib" value="lib/bcprov-jdk15on-151.jar"/>


    <property name="jdk.home" value="C:\Program Files\Java\jdk1.7.0_67"/>
	<property name="applet.name" value="SecureApplet"/>
	<property name="applet.sourcedir" value="${base.sourcedir}"/>
	<property name="applet.package" value="${base.package}.client"/>
	<loadresource property="applet.package-dir">
		<propertyresource name="applet.package"/>
		<filterchain>
			<tokenfilter>
				<filetokenizer/>
				<replacestring from="." to="/"/>
			</tokenfilter>
		</filterchain>
	</loadresource>
	<property name="applet.scriptdir" value="."/>
	<property name="applet.builddir" value="client-classes"/>
	<property name="package.aid" value="0x10:0x20:0x30:0x40:0x50:0x04"/>
	<property name="applet.aid" value="0x10:0x20:0x30:0x40:0x50:0x05"/>
	<property name="script.name" value="SecureApplet.scr"/>

	<property name="host.name" value="SecureHost"/>
	<property name="host.sourcedir" value="${base.sourcedir}"/>
	<property name="host.package" value="${base.package}.host"/>
	<loadresource property="host.package-dir">
		<propertyresource name="host.package"/>
		<filterchain>
			<tokenfilter>
				<filetokenizer/>
				<replacestring from="." to="/"/>
			</tokenfilter>
		</filterchain>
	</loadresource>
	<property name="host.builddir" value="host-classes"/>

	<property name="applet.deploydir" value="EEPROM"/>
	<property name="deploy.name" value="EEFile"/>
	<property name="exportmap" value="exportmap"/>
	<property file="build-config.properties"/>
	<property name="javacardkit.exports" value="${javacardkit.home}/api_export_files"/>
	<property name="javacardkit.bin" value="${javacardkit.home}/bin"/>
	<property name="javacardkit.lib" value="${javacardkit.home}/lib"/>
	<property name="javacardkit.ant" value="${javacardkit.home}/ant-tasks/lib"/>

	<!-- Note: PLEASE DON'T MODIFY ANY OF THE REMAINING BUILD FILE -->
	<!-- definitions for tasks for Java Card tools -->
	<taskdef name="apdutool"
			 classname="com.sun.javacard.ant.tasks.APDUToolTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<taskdef name="capgen"
			 classname="com.sun.javacard.ant.tasks.CapgenTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<taskdef name="maskgen"
			 classname="com.sun.javacard.ant.tasks.MaskgenTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<taskdef name="deploycap"
			 classname="com.sun.javacard.ant.tasks.DeployCapTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<taskdef name="exp2text"
			 classname="com.sun.javacard.ant.tasks.Exp2TextTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<taskdef name="convert"
			 classname="com.sun.javacard.ant.tasks.ConverterTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<taskdef name="verifyexport"
			 classname="com.sun.javacard.ant.tasks.VerifyExpTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<taskdef name="verifycap"
			 classname="com.sun.javacard.ant.tasks.VerifyCapTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<taskdef name="verifyrevision"
			 classname="com.sun.javacard.ant.tasks.VerifyRevTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<taskdef name="scriptgen"
			 classname="com.sun.javacard.ant.tasks.ScriptgenTask"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<typedef name="appletnameaid"
			 classname="com.sun.javacard.ant.types.AppletNameAID"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<typedef name="jcainputfile"
			 classname="com.sun.javacard.ant.types.JCAInputFile"
			 classpath="${javacardkit.ant}/jctasks.jar"/>
	<typedef name="exportfiles"
			 classname="org.apache.tools.ant.types.FileSet"
			 classpath="${javacardkit.ant}/jctasks.jar"/>

	<!-- set the classpath at minimum to the Java Card API but also for -->
	<!-- all other APIs needed in the project-->
	<path id="classpath">
		<pathelement path="${javacardkit.lib}/api.jar"/>
		<pathelement path="${javacardkit.lib}/converter.jar"/>
		<pathelement path="${javacardkit.lib}/offcardverifier.jar"/>
		<pathelement path="${javacardkit.lib}/jcrmiclientframework.jar"/>
		<pathelement path="${javacardkit.lib}/scriptgen.jar"/>
		<pathelement path="${javacardkit.lib}/apdutool.jar"/>
		<pathelement path="${javacardkit.lib}/apduio.jar"/>
		<pathelement path="${basedir}"/>
		<pathelement path="${host.builddir}"/>
		<pathelement path="${applet.builddir}"/>
		<pathelement path="${base.lib}"/>
	</path>
	<!--<pathelement path="${host.builddir}"/>-->
	<!--<pathelement path="${applet.builddir}"/>-->

	<!-- set the export path to the Java Card export files -->
	<path id="exportpath">
		<pathelement path="${javacardkit.exports}"/>
		<pathelement path="${applet.builddir}"/>
		<pathelement path="${base.lib}"/>
	</path>

	<!-- CLIENT -->

	<target name="clean-applet">
		<delete dir="${applet.builddir}"/>
		<delete dir="${applet.deploydir}"/>
	</target>

	<target name="build-applet">
		<mkdir dir="${applet.builddir}"/>
		<javac debug="yes" optimize="no" source="1.5" target="1.5"
			   srcdir="${applet.sourcedir}/${applet.package-dir}"
			   destdir="${applet.builddir}">
			<classpath refid="classpath"/>
		</javac>
	</target>

	<target name="convert-applet">
		<convert CAP="true" packagename="${applet.package-dir}"
				 packageaid="${package.aid}" majorminorversion="1.0"
				 classdir="${applet.builddir}" outputdirectory="${applet.builddir}"
				 verbose="${verbose}">
			<appletnameaid appletname="${applet.package-dir}/${applet.name}"
						   aid="${applet.aid}"/>
			<exportpath refid="exportpath"/>
			<classpath refid="classpath"/>
		</convert>
	</target>

	<target name="verify-applet" depends="convert-applet">
		<verifycap
				CapFile="${applet.builddir}/${applet.package-dir}/javacard/${applet.package-dir}.cap">
			<exportfiles dir="${javacardkit.exports}">
				<include name="**/io.exp"/>
				<include name="**/lang.exp"/>
				<include name="**/rmi.exp"/>
				<include name="**/framework.exp"/>
				<include name="**/service.exp"/>
				<include name="**/security.exp"/>
				<include name="**/crypto.exp"/>
			</exportfiles>
			<classpath refid="classpath"/>
		</verifycap>
	</target>

	<target name="deploy-applet" depends="convert-applet">
		<mkdir dir="${applet.deploydir}"/>
		<deploycap outEEFile="${applet.deploydir}/${deploy.name}"
				   CrefExe="${javacardkit.home}/bin/cref.exe"
				   CapFile="${applet.builddir}/${applet.package-dir}/javacard/client.cap">
			<classpath refid="classpath"/>
		</deploycap>
	</target>

	<target name="run-script">
		<apdutool scriptFile="${applet.scriptdir}/${script.name}"
				  inEEFile="${applet.deploydir}/${deploy.name}"
				  outEEFile="${applet.deploydir}/${deploy.name}"
				  CheckDownloadFailure="false"
				  CrefExe="${javacardkit.home}/bin/cref.exe">
			<classpath refid="classpath"/>
		</apdutool>
	</target>

	<target name="install-applet" depends="clean-applet,build-applet,deploy-applet,run-script">
		<echo message="Applet installed"/>
	</target>

	<target name="start-cad">
		<exec dir="${basedir}" executable="${javacardkit.bin}/cref.exe">
			<arg line="-i ${applet.deploydir}/${deploy.name}"/>
			<arg line="-o ${applet.deploydir}/${deploy.name}"/>
		</exec>
	</target>

	<!-- HOST -->

	<target name="build-host">
		<mkdir dir="${host.builddir}"/>
		<javac debug="yes" optimize="no" includeantruntime="false"
			   srcdir="${host.sourcedir}/${host.package-dir}"
			   destdir="${host.builddir}">
			<classpath refid="classpath"/>
		</javac>
	</target>

	<target name="run-host">
		<java dir="${host.builddir}" className="${host.package}.${host.name}" fork="true">
			<!--${host.package}/-->
			<classpath refid="classpath"/>
		</java>
	</target>

	<target name="clean-host">
		<delete dir="${host.builddir}"/>
	</target>

	<!-- OTHER -->
	<target name="clean" depends="clean-applet,clean-host"/>

	<target name="help">
		<echo message="build-applet:   Builds the Java Card applet"/>
		<echo message="verify-applet:  Optionally converts and verifies the applet"/>
		<echo message="deploy-applet:  Converts and deploys the applet"/>
		<echo message="run-script:     Runs the applet with a script file after deployed"/>
		<echo message="install-applet: Cleans, builds and deploys the applet and runs the installer-script on it"/>
		<echo message="start-cad:      Starts CAD simulator after applet deployed"/>
		<echo message="build-host:     Builds the host application"/>
		<echo message="run-host:       Runs the host application once built and CAD started"/>
		<echo message="clean:          Removes all class files"/>
	</target>
</project>
